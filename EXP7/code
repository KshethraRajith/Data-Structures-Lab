// Program to implement circular queue using array
#include <stdio.h>
#define N 5
int front=-1, rear=-1, queue[N];

void enqueue()
{
    int i;
    if((rear+1)%N==front)
    {
        printf("\nThe queue is full");
    }
    else if(front==-1 && rear==-1)
    {
        front=rear=0;
        printf("Enter the new elements: ");
        scanf("%d",&queue[rear]);
    }
    else
    {
        rear=(rear+1)%N;
        printf("Enter the new elements: ");
        scanf("%d",&queue[rear]);
    }
}

void dequeue()
{
    if(front==-1 && rear==-1)
    {
        printf("\nThe queue is empty");
    }
    else if(front==rear)
    {
        printf("The element removed is : %d",queue[front]);
        front=rear=-1;
    }
    else
    {
        printf("The element removed is : %d",queue[front]);
        queue[front]=0;
        front=(front+1)%N;
    }
}

void display()
{
    int i;
    if(front==-1 && rear==-1)
    {
        printf("\nThe queue is empty");
    }
    else
    {
        for(i=0; i<N; i++)
        {
            if(queue[i]!=0)
                printf("%d ",queue[i]);
        }
    }
}

int main()
{
    int choice;
    do
    {
        printf("\n\nChoose an option");
        printf("\n1.Enqueue\n2.Dequeue\n3.Display\n4.Exit\n");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1:
                enqueue();
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            default:
                printf("Invalid choice");
                break;
        };
    }
    while(choice!=4);
    return 0;
}

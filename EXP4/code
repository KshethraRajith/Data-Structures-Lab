#include <stdio.h>
#include <conio.h>

struct poly
{
    int coeff;
    int expo;
};

struct poly p1[10], p2[10], p3[10];

int readPoly(struct poly[]);
void addPoly(struct poly[], int, struct poly[], int, struct poly[]);
void displayPoly(struct poly[], int);

int readPoly(struct poly p[])
{
    int n, i;
    printf("\nEnter total number of terms in the polynomial: ");
    scanf("%d", &n);
    printf("\n\nEnter the COEFFICIENT and EXPONENT: ");

    for (i = 0; i < n; i++)
    {
        printf("\nEnter the Coefficient %d: ", i + 1);
        scanf("%d", &p[i].coeff);
        printf("Enter the Exponent %d: ", i + 1);
        scanf("%d", &p[i].expo);
    }
    return n;
}

void addPoly(struct poly p1[], int n1, struct poly p2[], int n2, struct poly p3[])
{
    int i, j, k;
    i = 0;
    j = 0;
    k = 0;

    while (i < n1 && j < n2)
    {
        if (p1[i].expo > p2[j].expo)
        {
            p3[k].coeff = p1[i].coeff;
            p3[k].expo = p1[i].expo;
            i++;
            k++;
        }
        else if (p1[i].expo < p2[j].expo)
        {
            p3[k].coeff = p2[j].coeff;
            p3[k].expo = p2[j].expo;
            j++;
            k++;
        }
        else
        {
            p3[k].coeff = p1[i].coeff + p2[j].coeff;
            p3[k].expo = p1[i].expo;
            i++;
            j++;
            k++;
        }
    }

    while (i < n1)
    {
        p3[k].coeff = p1[i].coeff;
        p3[k].expo = p1[i].expo;
        i++;
        k++;
    }

    while (j < n2)
    {
        p3[k].coeff = p2[j].coeff;
        p3[k].expo = p2[j].expo;
        j++;
        k++;
    }
    return k;
}

void displayPoly(struct poly p[], int term)
{
    int k;
    for (k = 0; k < term - 1; k++)
    {
        printf("%d(x^%d) + ", p[k].coeff, p[k].expo);
    }
    printf("%d(x^%d)", p[term - 1].coeff, p[term - 1].expo);
}

int main()
{
    int n1, n2, n3;
    n1 = readPoly(p1);
    printf("\nFIRST POLYNOMIAL: ");
    displayPoly(p1, n1);
    n2 = readPoly(p2);
    printf("\nSECOND POLYNOMIAL: ");
    displayPoly(p2, n2);
    n3 = addPoly(p1, n1, p2, n2, p3);
    printf("\nPolynomial after addition: ");
    displayPoly(p3, n3);
    return 0;
}
